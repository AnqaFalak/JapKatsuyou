.TH "Edict2" 3 "Tue Aug 29 2017" "Version 2.0.0" "JapKatsuyou.JpConj" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Edict2 \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <edict2\&.h>\fP
.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBJaVerb\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBEdict2\fP ()"
.br
.RI "\fI\fBEdict2::Edict2\fP Constructor of the \fBEdict2\fP management module\&. \fP"
.ti -1c
.RI "\fB~Edict2\fP ()"
.br
.RI "\fI\fBEdict2::~Edict2\fP Destructor of the \fBEdict2\fP management module\&. \fP"
.ti -1c
.RI "\fBJaVerb\fP \fBfind\fP (QString verb)"
.br
.RI "\fI\fBEdict2::find\fP Search for a verb in the database, and return its type\&. \fP"
.ti -1c
.RI "void \fBconnect\fP ()"
.br
.RI "\fI\fBEdict2::connect\fP Connect to edict2verbs\&.db SqLite database\&. \fP"
.ti -1c
.RI "void \fBdesconnect\fP ()"
.br
.RI "\fI\fBEdict2::desconnect\fP Desconnect edict2verbs\&.db SqLite database\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
This class is used to connect to the verbs' database, and verify if a verb exists, then get its type 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Edict2::Edict2 ()"

.PP
\fBEdict2::Edict2\fP Constructor of the \fBEdict2\fP management module\&. 
.SS "Edict2::~Edict2 ()"

.PP
\fBEdict2::~Edict2\fP Destructor of the \fBEdict2\fP management module\&. 
.SH "Member Function Documentation"
.PP 
.SS "void Edict2::connect ()"

.PP
\fBEdict2::connect\fP Connect to edict2verbs\&.db SqLite database\&. This function is loaded when we want to manage edict2verbs\&.db SqLite database\&. It looks for a connection name called 'dbverbs', if found we just use the database assigned to that connection name\&. If not, we search for edict2verbs\&.db, and assign connection name called 'dbverbs' to it\&. 
.SS "void Edict2::desconnect ()"

.PP
\fBEdict2::desconnect\fP Desconnect edict2verbs\&.db SqLite database\&. It looks for a connection name called 'dbverbs', if found we remove it\&. 
.SS "\fBEdict2::JaVerb\fP Edict2::find (QString verb)"

.PP
\fBEdict2::find\fP Search for a verb in the database, and return its type\&. 
.PP
\fBParameters:\fP
.RS 4
\fIverb\fP The verb in dictionary form (u-form), eg\&. 食べる, 飲む, 行く, 来る, etc\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
The type of the verb if found (See: VerbType::EdictType) 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for JapKatsuyou\&.JpConj from the source code\&.
